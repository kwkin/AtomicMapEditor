<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcad="http://avalondock.codeplex.com">

    <xcad:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <xcad:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <xcad:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />

    <!-- ############################### Document Pane Control Style ############################### -->
    <Style x:Key="DocumentPaneControlStyle"
           TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBackgroundBrush2}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBrush2}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="true"
                          SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="Transparent"
                                Grid.RowSpan="2" />
                        <Grid Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xcad:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={StaticResource BoolToVisibilityConverter}}"
                              Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <xcad:DocumentPaneTabPanel x:Name="HeaderPanel"
                                                       Grid.Column="0"
                                                       IsItemsHost="true"
                                                       Grid.Row="0"
                                                       KeyboardNavigation.TabIndex="1" />
                            <xcad:DropDownButton x:Name="MenuDropDownButton"
                                                 Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                                 Focusable="False"
                                                 Grid.Column="1">
                                <xcad:DropDownButton.DropDownContextMenu>
                                    <xcad:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <xcad:ContextMenuEx.ItemContainerStyle>
                                            <Style TargetType="{x:Type xcad:MenuItemEx}"
                                                   BasedOn="{StaticResource {x:Type MenuItem}}">
                                                <Setter Property="HeaderTemplate"
                                                        Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector"
                                                        Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate"
                                                        Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector"
                                                        Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command"
                                                        Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </xcad:ContextMenuEx.ItemContainerStyle>
                                    </xcad:ContextMenuEx>
                                </xcad:DropDownButton.DropDownContextMenu>
                                <Border Background="{DynamicResource TransparentBrush}">
                                    <Image Source="/Xceed.Wpf.xcad;component/Themes/Generic/Images/PinDocMenu.png" />
                                </Border>
                            </xcad:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryBackgroundBrush2}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}"
                                     Value="0">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="MenuDropDownButton" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background"
                            Value="{DynamicResource PrimaryBrush3}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="Cursor"
                            Value="Hand" />
                    <Setter Property="FontFamily"
                            Value="{DynamicResource PrimaryFontFamily}" />
                    <Setter Property="FontSize"
                            Value="{DynamicResource PrimaryFontSize}" />
                    <Setter Property="FontWeight"
                            Value="{DynamicResource PrimaryFontWeight}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource PrimaryTextBrush2}" />
                    <Setter Property="MinHeight"
                            Value="15" />
                    <Setter Property="MinWidth"
                            Value="10" />
                    <Setter Property="Visibility"
                            Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsEnabled"
                            Value="{Binding IsEnabled}" />
                    <Setter Property="ToolTip"
                            Value="{Binding ToolTip}" />
                    <Setter Property="Padding"
                            Value="2,0,2,0" />
                    <Setter Property="Margin"
                            Value="0,2,0,0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="Root"
                                      SnapsToDevicePixels="true">

                                    <!-- Visual State Groups -->
                                    <VisualStateManager.VisualStateGroups>

                                        <!-- Common Visual State Groups -->
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver" />
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                                   Storyboard.TargetName="Root">
                                                        <DiscreteDoubleKeyFrame KeyTime="0"
                                                                                Value="0.35" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused" />
                                            <VisualState x:Name="Unfocused" />
                                        </VisualStateGroup>

                                        <!-- Selection Visual State Groups -->
                                        <VisualStateGroup x:Name="SelectionStates">

                                            <!-- Common State Transitions -->
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0:0:0.3"
                                                                  To="Selected">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.3"
                                                                         Storyboard.TargetName="SelectedBorder"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="1" />
                                                    </Storyboard>
                                                </VisualTransition>
                                            </VisualStateGroup.Transitions>

                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames  Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                                   Storyboard.TargetName="ContentPresenter">
                                                        <SplineColorKeyFrame KeyTime="0"
                                                                             Value="{DynamicResource PressTextColor1}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unselected" />
                                        </VisualStateGroup>

                                        <!-- Validation Visual State Groups -->
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="Valid">
                                                <Storyboard />
                                            </VisualState>
                                            <VisualState x:Name="InvalidFocused">
                                                <Storyboard />
                                            </VisualState>
                                            <VisualState x:Name="InvalidUnfocused">
                                                <Storyboard />
                                            </VisualState>

                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>

                                    <!-- Assets -->
                                    <Border x:Name="UnselectedBorder"
                                            Opacity="1"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{DynamicResource PrimaryBrush2}"
                                            BorderThickness="0,0,0,2" />
                                    <Border x:Name="SelectedBorder"
                                            Opacity="0"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{DynamicResource PrimaryAccentBrush1}"
                                            BorderThickness="0,0,0,2" />
                                    <ContentPresenter x:Name="ContentPresenter"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}"
                                                      TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                                      TextBlock.FontSize="{TemplateBinding FontSize}"
                                                      TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                                      VerticalAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}" />
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <xcad:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <xcad:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>