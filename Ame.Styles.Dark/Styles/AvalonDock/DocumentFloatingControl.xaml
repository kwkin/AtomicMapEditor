<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
                    xmlns:xcad="http://avalondock.codeplex.com">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Dark;component/Styles/AvalonDock/AnchorableContextMenu.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <xcad:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <xcad:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />

    <!-- ############################### Layout Document Floating Control Style ############################### -->
    <Style x:Key="DocumentFloatingControlStyle"
           TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBackgroundBrush2}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBrush2}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}">
                    <Grid x:Name="Root">
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="22" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid x:Name="ToolbarPanel">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Dock Title -->
                                    <ContentPresenter x:Name="DockTitle"
                                                      Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                                      TextBlock.FontSize="{TemplateBinding FontSize}"
                                                      TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}" />
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>

                                    <!-- Maximize Button -->
                                    <Button x:Name="MaximizeButton"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Grid.Column="2"
                                            ToolTip="Maximize"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                        <Image Source="pack://application:,,,/AtomicTheme;component/Icons/ic_maximize_white_16dp_1x.png" />
                                    </Button>

                                    <!-- Minimize Button -->
                                    <Button x:Name="RestoreDownButton"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Grid.Column="2"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="Restore Down"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Image Source="pack://application:,,,/AtomicTheme;component/Icons/ic_restore_down_white_16dp_1x.png" />
                                    </Button>

                                    <!-- Close Button -->
                                    <Button x:Name="CloseButton"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Grid.Column="3"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="Close"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Image Source="pack://application:,,,/AtomicTheme;component/Icons/ic_close_white_16dp_1x.png" />
                                    </Button>
                                </Grid>

                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Grid.Row="1" />
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState"
                                 Value="Maximized">
                            <Setter Property="Padding"
                                    Value="3"
                                    TargetName="WindowBorder" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.RootDocument.IsActive, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="WindowBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource PrimaryBrush2}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>