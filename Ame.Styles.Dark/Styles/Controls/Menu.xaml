<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lui="clr-namespace:AtomicTheme.UILogic">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Dark;component/Styles/Controls/CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Dark;component/Styles/Controls/ScrollBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ############################### Separator Style ############################### -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Height"
                Value="1" />
        <Setter Property="Margin"
                Value="28,6,0,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource PrimaryBrush2}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Top Level Header Style ############################### -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid x:Name="Root"
              Background="{DynamicResource TransparentBrush}">
            <Border x:Name="HoverBackground"
                    Background="{DynamicResource HoverBrush3}"
                    BorderThickness="0"
                    Opacity="0">
            </Border>
            <Border x:Name="PressBackground"
                    Background="{DynamicResource HoverBrush3}"
                    BorderThickness="0"
                    Opacity="0">
            </Border>
            <ContentPresenter Margin="8,2,8,2"
                              ContentSource="Header"
                              RecognizesAccessKey="True">
            </ContentPresenter>
            <Popup x:Name="Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Fade">
                <Border x:Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="0,6,0,6"
                        BorderThickness="1">
                    <ScrollViewer CanContentScroll="True"
                                  Style="{StaticResource ScrollViewerStyle}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Opacity"
                        TargetName="HoverBackground"
                        Value="1">
                </Setter>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.12"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.03"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsSubmenuOpen"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.12"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="PressBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.03"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="PressBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ############################### Top Level Item Style ############################### -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid x:Name="Root"
              Background="{DynamicResource TransparentBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32"
                                  SharedSizeGroup="Icon" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="Shortcut" />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Border x:Name="HoverBackground"
                    Background="{DynamicResource HoverBrush3}"
                    BorderThickness="0"
                    Grid.ColumnSpan="4"
                    Opacity="0">
            </Border>
            <ContentPresenter x:Name="Icon"
                              ContentSource="Icon"
                              Grid.Column="0"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            </ContentPresenter>
            <ContentPresenter x:Name="HeaderHost"
                              ContentSource="Header"
                              Grid.Column="1"
                              Margin="8,2,8,2"
                              RecognizesAccessKey="True"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.12"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.03"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ############################### Sub Menu Header Style ############################### -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid x:Name="Root"
              Background="{DynamicResource TransparentBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32"
                                  SharedSizeGroup="Icon" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="Shortcut" />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Border x:Name="HoverBackground"
                    Background="{DynamicResource HoverBrush3}"
                    BorderThickness="0"
                    Grid.ColumnSpan="4"
                    Opacity="0">
            </Border>
            <Border x:Name="PressBackground"
                    Background="{DynamicResource HoverBrush3}"
                    BorderThickness="0"
                    Opacity="0">
            </Border>
            <ContentPresenter x:Name="Icon"
                              Margin="8,2,8,2"
                              VerticalAlignment="Center"
                              ContentSource="Icon">
            </ContentPresenter>
            <ContentPresenter x:Name="HeaderHost"
                              Grid.Column="1"
                              ContentSource="Header"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True">
            </ContentPresenter>
            <Popup x:Name="Popup"
                   Placement="Right"
                   HorizontalOffset="-4"
                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Fade">
                <Border x:Name="SubmenuBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        Padding="0,6,0,6"
                        SnapsToDevicePixels="True">
                    <ScrollViewer CanContentScroll="True"
                                  Style="{StaticResource ScrollViewerStyle}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </ScrollViewer>
                </Border>
            </Popup>
            <TextBlock x:Name="InputGestureText"
                       Grid.Column="2"
                       Text="{TemplateBinding InputGestureText}"
                       Margin="5,2,0,2"
                       DockPanel.Dock="Right"
                       VerticalAlignment="Center" />
            <Path x:Name="path"
                  Grid.Column="3"
                  Data="M 300 100 L 300 500 L 550 300 L 300 100 "
                  Fill="{DynamicResource HoverBrush2}"
                  Width="12"
                  Height="12"
                  Stretch="Uniform">
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.12"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.03"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ############################### Sub Menu Item Style ############################### -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid x:Name="Root"
              Background="{DynamicResource TransparentBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32"
                                  SharedSizeGroup="Icon" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="Shortcut" />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Border x:Name="HoverBackground"
                    Background="{DynamicResource HoverBrush3}"
                    BorderThickness="0"
                    Grid.ColumnSpan="4"
                    Opacity="0">
            </Border>
            <ContentPresenter x:Name="Icon"
                              ContentSource="Icon"
                              Margin="8,2,8,2"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Path x:Name="CheckMark"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0"
                  Height="12"
                  HorizontalAlignment="Center"
                  SnapsToDevicePixels="False"
                  Stretch="Uniform"
                  Stroke="{DynamicResource PrimaryTextBrush2}"
                  StrokeThickness="2"
                  VerticalAlignment="Center"
                  Visibility="Collapsed"
                  Width="12">
            </Path>
            <ContentPresenter x:Name="HeaderHost"
                              Grid.Column="1"
                              ContentSource="Header"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True" />
            <TextBlock x:Name="InputGestureText"
                       DockPanel.Dock="Right"
                       Grid.Column="2"
                       Margin="5,2,0,2"
                       Text="{TemplateBinding InputGestureText}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.12"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.03"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="HoverBackground">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ############################### Menu Item Style ############################### -->
    <Style x:Key="MenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBrush3}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBrush2}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush2}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Padding"
                Value="4,0,0,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ############################### Context Menu Style ############################### -->
    <Style x:Key="ContextMenuStyle"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBrush3}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBrush2}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush2}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Padding"
                Value="4,0,0,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid x:Name="Root">
                        <!-- Visual State Groups -->
                        <VisualStateManager.VisualStateGroups>

                            <!-- Validation State Group  -->
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="0,6,0,6">
                            <StackPanel ClipToBounds="True"
                                        Orientation="Vertical"
                                        IsItemsHost="True">
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Menu Style ############################### -->
    <Style x:Key="MenuStyle"
           TargetType="{x:Type Menu}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBrush3}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBrush2}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush2}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Padding"
                Value="4,0,0,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid x:Name="Root">
                        <!-- Visual State Groups -->
                        <VisualStateManager.VisualStateGroups>

                            <!-- Validation State Group  -->
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel ClipToBounds="True"
                                        Orientation="Horizontal"
                                        IsItemsHost="True">
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>