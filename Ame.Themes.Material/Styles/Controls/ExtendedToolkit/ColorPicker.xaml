<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:logic="clr-namespace:Ame.Themes.Material.UILogic"
                    xmlns:conv="clr-namespace:Ame.Themes.Material.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Material;component/Styles/Controls/ExtendedToolkit/ColorCanvas.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Material;component/Styles/Controls/Native/ToolTip.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Material;component/Styles/Controls/Native/TabItem.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <logic:ColorPickerAvailableColors x:Key="ColorPickerAvailableColors" />
    <conv:BooleanToVisiblityConverter x:Key="BooleanToVisibilityConverter" />
    <xctk:AdditionConverter x:Key="AdditionConverter" />
    <xctk:ColorModeToTabItemSelectedConverter x:Key="ColorModeToTabItemSelectedConverter" />
    <xctk:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />
    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />

    <!-- ############################### Color Picker Toggle Button Style ############################## -->
    <Style x:Key="ColorPickerToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="Padding"
                Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Background"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{DynamicResource MainDarkBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4 4 0 0">
                            </Border>
                            <Border x:Name="HoverBackground"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4 4 0 0"
                                    Opacity="0">
                            </Border>
                            <Border x:Name="SelectedBackground"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4 4 0 0"
                                    Opacity="0">
                            </Border>
                            <Path x:Name="DropDownArrow"
                                  Grid.Column="2"
                                  Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                                  Fill="{DynamicResource MainDarkBrush}"
                                  Margin="{TemplateBinding Padding}"
                                  Width="12"
                                  Height="12"
                                  Stretch="Uniform">
                            </Path>
                            <Path x:Name="HoverDropDownArrow"
                                  Grid.Column="2"
                                  Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                                  Stretch="Uniform"
                                  Fill="{TemplateBinding BorderBrush}"
                                  Margin="{TemplateBinding Padding}"
                                  Width="12"
                                  Height="12"
                                  Opacity="0">
                            </Path>
                            <Path x:Name="SelectedDropDownArrow"
                                  Grid.Column="2"
                                  Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                                  Stretch="Uniform"
                                  Fill="{TemplateBinding BorderBrush}"
                                  Margin="{TemplateBinding Padding}"
                                  Width="12"
                                  Height="12"
                                  Opacity="0">
                            </Path>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            </ContentPresenter>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"
                                                          To="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.1"
                                                                 Storyboard.TargetName="HoverBackground"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="{DynamicResource StrongFillOpacity}">
                                                </DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.1"
                                                                 Storyboard.TargetName="HoverDropDownArrow"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="{DynamicResource StrongFillOpacity}">
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{DynamicResource StrongFillOpacity}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverDropDownArrow"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{DynamicResource StrongFillOpacity}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedDropDownArrow"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{DynamicResource DisabledOpacity}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"
                                                          To="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.1"
                                                                 Storyboard.TargetName="SelectedBackground"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1">
                                                </DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.1"
                                                                 Storyboard.TargetName="SelectedDropDownArrow"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1">
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedDropDownArrow"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InvalidFocused">
                                    <VisualState x:Name="Visibility" />
                                    <VisualState x:Name="IsOpen" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Color Display Content Control Style ############################## -->
    <Style x:Key="ColorDisplayContentControlStyle"
           TargetType="{x:Type ContentControl}">
        <Setter Property="Margin"
                Value="2 0 2 2" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{DynamicResource TransparentBrush}">
                        <Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Color Item Container Style ############################## -->
    <Style x:Key="ColorItemContainerStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="Root"
                          ToolTip="{Binding Name}">
                        <Grid.Resources>
                            <Style TargetType="ToolTip"
                                   BasedOn="{StaticResource ToolTipStyle}">
                            </Style>
                        </Grid.Resources>

                        <Border x:Name="ColorBorder"
                                BorderThickness="1">
                            <Rectangle x:Name="ColorRectangle"
                                       Height="16"
                                       Width="16"
                                       Fill="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       RadiusX="0"
                                       RadiusY="0">
                            </Rectangle>
                        </Border>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RadiusX"
                                                                       Storyboard.TargetName="ColorRectangle">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RadiusY"
                                                                       Storyboard.TargetName="ColorRectangle">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Color List Style ############################## -->
    <Style x:Key="ColorListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ColorItemContainerStyle}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="180" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxHeight"
                Value="350" />
        <Setter Property="SelectionMode"
                Value="Single" />
    </Style>

    <!-- ############################### Color Tab Item Style ############################## -->
    <Style x:Key="ColorPickerTabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryMidBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryMidTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 3" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush2}" />
        <Setter Property="Padding"
                Value="12,4,12,8" />
        <Setter Property="MinHeight"
                Value="15" />
        <Setter Property="MinWidth"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root"
                          Margin="-1">

                        <Border x:Name="UnselectedBorder"
                                Opacity="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource MainDarkBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                        <Border x:Name="SelectedBorder"
                                Opacity="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                        <ContentPresenter x:Name="ContentPresenter"
                                          ContentSource="Header"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                          TextBlock.Foreground="{DynamicResource PrimaryMidTextBrush}"
                                          VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"
                                                      To="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3"
                                                             Storyboard.TargetName="SelectedBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard />
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Color Picker Style ############################## -->
    <Style x:Key="ColorPickerStyle"
           TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="ButtonStyle"
                Value="{StaticResource ColorPickerToggleButtonStyle}" />
        <Setter Property="MaxDropDownWidth"
                Value="200" />
        <Setter Property="ShowTabHeaders"
                Value="True" />
        <Setter Property="ShowAvailableColors"
                Value="True" />
        <Setter Property="ShowStandardColors"
                Value="False" />
        <Setter Property="ShowRecentColors"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid x:Name="Root">
                        <ToggleButton x:Name="PART_ColorPickerToggleButton"
                                      Style="{TemplateBinding ButtonStyle}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      IsTabStop="True"
                                      MinHeight="22"
                                      Padding="{TemplateBinding Padding}">
                            <Grid Margin="2">
                                <ContentControl x:Name="ColorOnly"
                                                Style="{StaticResource ColorDisplayContentControlStyle}" />
                                <Border x:Name="ColorAndName"
                                        Visibility="Hidden">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl HorizontalAlignment="Left"
                                                        BorderThickness="1"
                                                        Margin="2,1,4,1"
                                                        Style="{StaticResource ColorDisplayContentControlStyle}"
                                                        Width="16"
                                                        Height="16"/>
                                        <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}"
                                                   VerticalAlignment="Center" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="PART_ColorPickerPalettePopup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}"
                               Placement="Relative"
                               PopupAnimation="Slide"
                               StaysOpen="False">
                            <Border x:Name="PopupBorder"
                                    Background="{DynamicResource MainLightBrush}"
                                    BorderBrush="{DynamicResource TransparentBrush}"
                                    MinWidth="{Binding ActualWidth, ElementName=Root}"
                                    BorderThickness="0"
                                    Margin="12,0,12,12"
                                    Effect="{DynamicResource ShadowDepth6}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- Selected Color Indicator -->
                                    <Border x:Name="SelectedColorBorder"
                                            Background="{DynamicResource TransparentBrush}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0,0,0,2"
                                            CornerRadius="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="0">
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle x:Name="SelectedColor"
                                                       Fill="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                                            <TextBox x:Name="SelectedColorText"
                                                     BorderThickness="0"
                                                     Grid.Column="1"
                                                     Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}"
                                                     VerticalAlignment="Center" />
                                        </Grid>
                                    </Border>

                                    <TabControl x:Name="ColorPickerTabControl"
                                                Grid.Row="1"
                                                SelectedIndex="{Binding ColorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorModeToTabItemSelectedConverter}}">

                                        <!-- Available Tab Item -->
                                        <xctk:ColorPickerTabItem x:Name="AvailableTabItem"
                                                                 Style="{StaticResource ColorPickerTabItemStyle}"
                                                                 Header="Palette">
                                            <Grid x:Name="AvailableColorGrid"
                                                  DataContext="{StaticResource ColorPickerAvailableColors}">
                                                <ListBox x:Name="PART_AvailableColors"
                                                         ItemsSource="{Binding AvailableColors}"
                                                         Style="{StaticResource ColorListBoxStyle}">
                                                </ListBox>
                                            </Grid>
                                        </xctk:ColorPickerTabItem>

                                        <!-- Advanced Tab Item -->
                                        <xctk:ColorPickerTabItem x:Name="AdvancedTabItem"
                                                                 Style="{StaticResource ColorPickerTabItemStyle}"
                                                                 Header="Custom">
                                            <Grid x:Name="AdvancedColorGrid">
                                                <xctk:ColorCanvas Background="Transparent"
                                                                  BorderThickness="0"
                                                                  SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}">
                                                </xctk:ColorCanvas>
                                            </Grid>
                                        </xctk:ColorPickerTabItem>

                                        <!-- Standard Tab Item -->
                                        <xctk:ColorPickerTabItem x:Name="StandardTabItem"
                                                                 Style="{StaticResource ColorPickerTabItemStyle}"
                                                                 Header="Standard"
                                                                 Visibility="Visible">
                                            <Grid x:Name="StandardColorGrid"
                                                  Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ListBox x:Name="PART_StandardColors"
                                                         Grid.Row="1"
                                                         ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Style="{StaticResource ColorListBoxStyle}">
                                                </ListBox>
                                            </Grid>
                                        </xctk:ColorPickerTabItem>

                                        <!-- Recent Tab Item -->
                                        <xctk:ColorPickerTabItem x:Name="RecentTabItem"
                                                                 Style="{StaticResource ColorPickerTabItemStyle}"
                                                                 Header="Recent"
                                                                 Visibility="Visible">
                                            <Grid x:Name="RecentColorGrid">
                                                <ListBox x:Name="PART_RecentColors"
                                                         Grid.Row="1"
                                                         MinHeight="24"
                                                         ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Style="{StaticResource ColorListBoxStyle}">
                                                </ListBox>
                                            </Grid>
                                        </xctk:ColorPickerTabItem>
                                    </TabControl>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Root"
                                    Property="Opacity"
                                    Value="{DynamicResource DisabledOpacity}" />
                        </Trigger>
                        
                        <Trigger Property="DisplayColorAndName"
                                 Value="True">
                            <Setter TargetName="ColorOnly"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ColorAndName"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <Trigger Property="ShowTabHeaders"
                                 Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="AvailableTabItem" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="AdvancedTabItem" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="StandardTabItem" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="RecentTabItem" />
                        </Trigger>

                        <Trigger Property="ShowAvailableColors"
                                 Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="AvailableTabItem" />
                        </Trigger>

                        <Trigger Property="ShowStandardColors"
                                 Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="StandardTabItem" />
                        </Trigger>

                        <Trigger Property="ShowRecentColors"
                                 Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="RecentTabItem" />
                        </Trigger>

                        <Trigger Property="ShowDropDownButton"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
