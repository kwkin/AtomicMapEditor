<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:logic="clr-namespace:Ame.Themes.Material.UILogic"
                    xmlns:conv="clr-namespace:Ame.Themes.Material.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Material;component/Styles/Controls/ExtendedToolkit/NumericUpDown.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Material;component/Styles/Controls/Native/TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Ame.Themes.Material;component/Styles/Controls/Native/Slider.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:BooleanToVisiblityConverter x:Key="BooleanToVisibilityConverter" />
    <xctk:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />

    <Color x:Key="SliderRedColor">#db0d08</Color>
    <Color x:Key="SliderGreenColor">#03aa27</Color>
    <Color x:Key="SliderBlueColor">#037ec1</Color>
    <Color x:Key="SliderAlphaColor">#7a7a7a</Color>
    <SolidColorBrush x:Key="SliderRedBrush"
                     Color="{StaticResource SliderRedColor}" />
    <SolidColorBrush x:Key="SliderGreenBrush"
                     Color="{StaticResource SliderGreenColor}" />
    <SolidColorBrush x:Key="SliderBlueBrush"
                     Color="{StaticResource SliderBlueColor}" />
    <SolidColorBrush x:Key="SliderAlphaBrush"
                     Color="{StaticResource SliderAlphaColor}" />

    <!-- ###############################  Slider Horizontal Repeat Button Style  ############################### -->
    <Style x:Key="SliderHorizontalRepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="PART_SelectionRange"
                            Canvas.Top="8"
                            Width="{TemplateBinding ActualWidth}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Slide Thumb Style ############################### -->
    <Style x:Key="SlideThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Background"
                Value="{DynamicResource BaseLightBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BaseDarkBrush}" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas x:Name="Root">

                        <Ellipse x:Name="Thumb"
                                 Height="16"
                                 HorizontalAlignment="Center"
                                 Fill="{TemplateBinding Background}"
                                 Opacity="0.7"
                                 StrokeThickness="0"
                                 VerticalAlignment="Center"
                                 Width="16">
                        </Ellipse>
                        <Ellipse x:Name="ThumbBorder"
                                 Height="16"
                                 HorizontalAlignment="Center"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="1"
                                 VerticalAlignment="Center"
                                 Width="16">
                        </Ellipse>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualStateGroup.Transitions>

                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="Thumb"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.5" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="Thumb"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Thumb"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbBorder"
                                                                       Storyboard.TargetProperty="StrokeThickness">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Thumb"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbBorder"
                                                                       Storyboard.TargetProperty="StrokeThickness">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Slider Horizontal Template ############################### -->
    <ControlTemplate x:Key="ColorSpectrumHorizontalSliderTemplate"
                     TargetType="{x:Type Slider}">
        <Grid x:Name="Root"
              SnapsToDevicePixels="True">
            <Border x:Name="PART_TrackBackground"
                    Height="{TemplateBinding Width}"
                    CornerRadius="10">
                <Rectangle x:Name="PART_SpectrumDisplay"
                           RenderTransformOrigin="0.5,0.5"
                           Stretch="Fill">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Border>

            <Track Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="DecreaseRepeatButton"
                                  Command="{x:Static Slider.DecreaseLarge}"
                                  MinHeight="16"
                                  Style="{StaticResource SliderHorizontalRepeatButtonStyle}"
                                  VerticalAlignment="Center" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="IncreaseRepeatButton"
                                  Command="{x:Static Slider.IncreaseLarge}"
                                  MinHeight="16"
                                  Style="{StaticResource SliderHorizontalRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb"
                           HorizontalAlignment="Center"
                           Style="{StaticResource SlideThumbStyle}">
                        <Thumb.RenderTransform>
                            <TranslateTransform X="-8" />
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecreaseRepeatButton"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{DynamicResource BaseMidBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                           Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                        Value="{DynamicResource DisabledOpacity}" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid" />
                    <VisualState x:Name="InvalidFocused" />
                    <VisualState x:Name="InvalidUnfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!-- ############################### Color Spectrum Slider Style ############################## -->
    <Style x:Key="ColorSpectrumSliderStyle"
           TargetType="{x:Type Slider}">
        <Setter Property="Background"
                Value="{DynamicResource BaseMidBrush}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Width"
                Value="200" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Template"
                        Value="{StaticResource ColorSpectrumHorizontalSliderTemplate}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template"
                        Value="{StaticResource ColorSpectrumHorizontalSliderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ############################### Color Canvas Thumb Style  ############################### -->
    <Style x:Key="ColorCanvasThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="Background"
                Value="{DynamicResource BaseLightBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BaseDarkBrush}" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas x:Name="Root">
                        <Ellipse x:Name="Thumb"
                                 Height="16"
                                 HorizontalAlignment="Center"
                                 Fill="{DynamicResource TransparentBrush}"
                                 Stroke="{TemplateBinding Background}"
                                 Opacity="0.7"
                                 StrokeThickness="4"
                                 VerticalAlignment="Center"
                                 Width="16">
                        </Ellipse>
                        <Ellipse x:Name="ThumbBorder"
                                 Height="16"
                                 HorizontalAlignment="Center"
                                 Fill="{DynamicResource TransparentBrush}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 Opacity="0.7"
                                 StrokeThickness="2"
                                 VerticalAlignment="Center"
                                 Width="16">
                        </Ellipse>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Color Canvas Style ############################## -->
    <Style x:Name="ColorCanvasStyle"
           TargetType="{x:Type xctk:ColorCanvas}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorCanvas}">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="3">
                        <Grid x:Name="CanvasControls"
                                Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="16" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="CanvasBorder"
                                    Background="{DynamicResource TransparentBrush}"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Grid.Row="0"
                                    BorderThickness="1"
                                    ClipToBounds="True">
                                <Canvas x:Name="PART_ColorShadingCanvas"
                                        Height="100"
                                        Width="200"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="ColorShadingRectangle"
                                               Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}"
                                               Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}"
                                               Fill="{Binding SelectedColor, ElementName=PART_SpectrumSlider, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                                    <Rectangle x:Name="WhiteGradient"
                                               Width="{Binding ElementName=PART_ColorShadingCanvas,Path=Width}"
                                               Height="{Binding ElementName=PART_ColorShadingCanvas,Path=Height}">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="1,0">
                                                <GradientStop Offset="0"
                                                              Color="#FFFFFFFF" />
                                                <GradientStop Offset="1"
                                                              Color="Transparent" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="BlackGradient"
                                               Width="{Binding ElementName=PART_ColorShadingCanvas,Path=Width}"
                                               Height="{Binding ElementName=PART_ColorShadingCanvas,Path=Height}">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,1"
                                                                 EndPoint="0, 0">
                                                <GradientStop Offset="0"
                                                              Color="#FF000000" />
                                                <GradientStop Offset="1"
                                                              Color="#00000000" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Canvas x:Name="PART_ColorShadeSelector"
                                            Width="12"
                                            Height="12"
                                            IsHitTestVisible="False">
                                        <Thumb x:Name="Thumb"
                                               Background="{DynamicResource TransparentBrush}"
                                               Style="{StaticResource ColorCanvasThumb}">
                                        </Thumb>
                                    </Canvas>
                                </Canvas>
                            </Border>

                            <Border x:Name="ColorSpectrumBorder"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    ClipToBounds="False">
                                <xctk:ColorSpectrumSlider x:Name="PART_SpectrumSlider"
                                                          MinWidth="200"
                                                          Width="200"
                                                          Orientation="Horizontal"
                                                          HorizontalAlignment="Center"
                                                          Style="{StaticResource ColorSpectrumSliderStyle}">
                                </xctk:ColorSpectrumSlider>
                            </Border>

                            <!-- Red -->
                            <TextBlock x:Name="RedText"
                                       Grid.Row="2"
                                       Grid.Column="0"
                                       Text="R"
                                       VerticalAlignment="Center" />
                            <Slider x:Name="PART_RSlider"
                                    Value="{Binding R, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource PrimaryMidDiscreteSliderStyle}"
                                    Background="{StaticResource SliderRedBrush}"
                                    Maximum="255"
                                    SmallChange="1"
                                    LargeChange="10"
                                    TickFrequency="1"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Margin="4,6,4,6"
                                    VerticalAlignment="Center" />
                            <xctk:IntegerUpDown x:Name="RedField"
                                                Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="3"
                                                Increment="1"
                                                Maximum="255"
                                                Minimum="0"
                                                Text="{Binding Value, ElementName=PART_RSlider}">
                            </xctk:IntegerUpDown>

                            <!-- Green -->
                            <TextBlock x:Name="GreenText"
                                       Grid.Row="3"
                                       Grid.Column="0"
                                       Text="G"
                                       VerticalAlignment="Center">
                            </TextBlock>
                            <Slider x:Name="PART_GSlider"
                                    Value="{Binding G, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource PrimaryMidDiscreteSliderStyle}"
                                    Background="{StaticResource SliderGreenBrush}"
                                    Maximum="255"
                                    SmallChange="1"
                                    LargeChange="10"
                                    TickFrequency="1"
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Margin="4,6,4,6"
                                    VerticalAlignment="Center">
                            </Slider>
                            <xctk:IntegerUpDown x:Name="GreenField"
                                                Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="3"
                                                Grid.Column="2"
                                                Increment="1"
                                                Maximum="255"
                                                Minimum="0"
                                                UpdateValueOnEnterKey="True"
                                                Text="{Binding Value, ElementName=PART_GSlider}">
                            </xctk:IntegerUpDown>

                            <!-- Blue -->
                            <TextBlock x:Name="BlueText"
                                       Grid.Row="4"
                                       Grid.Column="0"
                                       Text="B"
                                       VerticalAlignment="Center">
                            </TextBlock>
                            <Slider x:Name="PART_BSlider"
                                    Value="{Binding B, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource PrimaryMidDiscreteSliderStyle}"
                                    Background="{StaticResource SliderBlueBrush}"
                                    Maximum="255"
                                    SmallChange="1"
                                    LargeChange="10"
                                    TickFrequency="1"
                                    Grid.Row="4"
                                    Grid.Column="1"
                                    Margin="4,6,4,6"
                                    VerticalAlignment="Center">
                            </Slider>
                            <xctk:IntegerUpDown x:Name="BlueField"
                                                Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="4"
                                                Grid.Column="3"
                                                Increment="1"
                                                Maximum="255"
                                                Minimum="0"
                                                Text="{Binding Value, ElementName=PART_BSlider}">
                            </xctk:IntegerUpDown>

                            <!-- Opacity -->
                            <TextBlock x:Name="OpacityText"
                                       Grid.Row="5"
                                       Grid.Column="0"
                                       Text="A"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            </TextBlock>
                            <Slider x:Name="PART_OpacitySlider"
                                    Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource PrimaryMidDiscreteSliderStyle}"
                                    Background="{StaticResource SliderAlphaBrush}"
                                    Grid.Row="5"
                                    Grid.Column="1"
                                    Maximum="255"
                                    SmallChange="1"
                                    LargeChange="10"
                                    Margin="4,6,4,6"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            </Slider>
                            <xctk:IntegerUpDown x:Name="OpacityField"
                                                Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="5"
                                                Grid.Column="3"
                                                Increment="1"
                                                Maximum="255"
                                                Minimum="0"
                                                Text="{Binding Value, ElementName=PART_OpacitySlider}"
                                                Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            </xctk:IntegerUpDown>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BaseDarkTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
