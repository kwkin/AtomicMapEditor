<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:logic="clr-namespace:Ame.Themes.Material.UILogic">

    <sys:Double x:Key="ComboBoxItemSelectedOpacity">0.50</sys:Double>

    <!-- ############################### ComboBox Toggle Button Style ############################### -->
    <Style x:Key="BaseComboBoxToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="Padding"
                Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="Background"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource MainDarkBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4 4 0 0">
                        </Border>
                        <Border x:Name="HoverBackground"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4 4 0 0"
                                Opacity="0">
                        </Border>
                        <Border x:Name="SelectedBackground"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4 4 0 0"
                                Opacity="0">
                        </Border>
                        <Path x:Name="DropDownArrow"
                              Grid.Column="2"
                              Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                              Fill="{DynamicResource MainDarkBrush}"
                              Margin="{TemplateBinding Padding}"
                              Width="12"
                              Height="12"
                              Stretch="Uniform">
                        </Path>
                        <Path x:Name="HoverDropDownArrow"
                              Grid.Column="2"
                              Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                              Stretch="Uniform"
                              Fill="{TemplateBinding BorderBrush}"
                              Margin="{TemplateBinding Padding}"
                              Width="12"
                              Height="12"
                              Opacity="0">
                        </Path>
                        <Path x:Name="SelectedDropDownArrow"
                              Grid.Column="2"
                              Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                              Stretch="Uniform"
                              Fill="{TemplateBinding BorderBrush}"
                              Margin="{TemplateBinding Padding}"
                              Width="12"
                              Height="12"
                              Opacity="0">
                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="HoverBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource StrongFillOpacity}">
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="HoverDropDownArrow"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource StrongFillOpacity}">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource StrongFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverDropDownArrow"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource StrongFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedDropDownArrow"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="SelectedBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1">
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="SelectedDropDownArrow"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedDropDownArrow"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InvalidFocused">
                                <VisualState x:Name="Visibility" />
                                <VisualState x:Name="IsOpen" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Accent ComboBox Toggle Button Style ############################### -->
    <Style x:Key="AccentComboBoxToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="Padding"
                Value="6" />
        <Setter Property="logic:FillAssist.Feedback"
                Value="{DynamicResource FillFeedbackMidBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="Background"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4 4 0 0">
                        </Border>
                        <Path x:Name="DropDownArrow"
                              Grid.Column="2"
                              Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                              Fill="{TemplateBinding BorderBrush}"
                              Margin="{TemplateBinding Padding}"
                              Width="12"
                              Height="12"
                              Stretch="Uniform">
                        </Path>
                        <Border x:Name="HoverRipple"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding logic:FillAssist.Feedback}"
                                BorderThickness="0"
                                CornerRadius="4"
                                Opacity="0">
                        </Border>
                        <Border x:Name="Ripple"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding logic:FillAssist.Feedback}"
                                BorderThickness="0"
                                CornerRadius="4"
                                Opacity="0">
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="HoverRipple"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource MidFillOpacity}">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="HoverRipple"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource StrongFillOpacity}">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverRipple"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource MidFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverRipple"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource StrongFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="Ripple"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource StrongFillOpacity}">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ripple"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource StrongFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InvalidFocused">
                                <VisualState x:Name="Visibility" />
                                <VisualState x:Name="IsOpen" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### ComboBox Style ############################### -->
    <Style x:Key="PrimaryMidComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="Padding"
                Value="2 8 2 4" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryMidComboBoxItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root"
                          SnapsToDevicePixels="true">

                        <ToggleButton Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource BaseComboBoxToggleButtonStyle}">
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          IsHitTestVisible="false">
                        </ContentPresenter>

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimation}}"
                               Placement="Bottom">
                            <Border x:Name="DropDownBorder"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource MainLightBrush}"
                                    BorderBrush="{DynamicResource TransparentBrush}"
                                    BorderThickness="0"
                                    Margin="12 0 12 12"
                                    MinWidth="{Binding ActualWidth, ElementName=Root}"
                                    Effect="{DynamicResource ShadowDepth6}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Height="0"
                                                Width="0"
                                                VerticalAlignment="Top"
                                                HorizontalAlignment="Left">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}">
                                            </Rectangle>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        </ItemsPresenter>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="Validationstates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable" />
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryLightComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="PrimaryDarkComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryDarkComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryLightComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryMidComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryMidBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryMidComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryDarkComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryDarkComboBoxItemStyle}" />
    </Style>


    <!-- ############################### Filled ComboBox Item Style ############################## -->
    <Style x:Key="PrimaryLightFilledComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightComboBoxItemStyle}" />
    </Style>
    <Style x:Key="PrimaryMidFilledComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="PrimaryDarkFilledComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryDarkComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryLightFilledComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryMidFilledComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryMidBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryMidComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryDarkFilledComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryDarkComboBoxItemStyle}" />
    </Style>


    <!-- ############################### Accent ComboBox Item Style ############################## -->
    <Style x:Key="PrimaryMidAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderThickness"
                Value="0 0 0 2" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BaseDarkTextBrush}" />
        <Setter Property="Padding"
                Value="2 8 2 4" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryMidComboBoxItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root"
                          SnapsToDevicePixels="true">

                        <ToggleButton Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource AccentComboBoxToggleButtonStyle}">
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          IsHitTestVisible="false">
                        </ContentPresenter>

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimation}}"
                               Placement="Bottom">
                            <Border x:Name="DropDownBorder"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource MainLightBrush}"
                                    BorderBrush="{DynamicResource TransparentBrush}"
                                    BorderThickness="0"
                                    Margin="12,0,12,12"
                                    MinWidth="{Binding ActualWidth, ElementName=Root}"
                                    Effect="{DynamicResource ShadowDepth6}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Height="0"
                                                Width="0"
                                                VerticalAlignment="Top"
                                                HorizontalAlignment="Left">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}">
                                            </Rectangle>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        </ItemsPresenter>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="Validationstates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable" />
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryLightAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="PrimaryDarkAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryDarkComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryLightAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryMidAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryMidBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryMidComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryDarkAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryDarkComboBoxItemStyle}" />
    </Style>


    <!-- ############################### Filled ComboBox Item Style ############################## -->
    <Style x:Key="PrimaryLightFillAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightComboBoxItemStyle}" />
    </Style>
    <Style x:Key="PrimaryMidFillAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="PrimaryDarkFillAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryDarkComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryLightFillAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryLightBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryLightComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryMidFillAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryMidBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryMidComboBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryDarkFillAccentComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource PrimaryMidAccentComboBoxStyle}">
        <Setter Property="Background"
                Value="{DynamicResource MainMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryDarkBrush}" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryDarkComboBoxItemStyle}" />
    </Style>

    <!-- ############################### ComboBox Item Style ############################## -->
    <Style x:Key="PrimaryMidComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource MainDarkTextBrush}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Padding"
                Value="4,0,0,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Background"
                                Background="{DynamicResource TransparentBrush}"
                                BorderBrush="{DynamicResource TransparentBrush}"
                                BorderThickness="0">
                        </Border>
                        <Border x:Name="HoverBackground"
                                Background="{DynamicResource BaseMidBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                        </Border>
                        <Border x:Name="SelectedBackground"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                        </Border>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Opacity="1">
                        </ContentPresenter>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="HoverBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.2"
                                                      To="Normal">
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ComboBoxItemSelectedOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryLightComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource PrimaryMidComboBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryLightBrush}" />
    </Style>

    <Style x:Key="PrimaryDarkComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource PrimaryMidComboBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryDarkBrush}" />
    </Style>

    <Style x:Key="SecondaryLightComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource PrimaryMidComboBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryLightBrush}" />
    </Style>

    <Style x:Key="SecondaryMidComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource PrimaryMidComboBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryMidBrush}" />
    </Style>

    <Style x:Key="SecondaryDarkComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource PrimaryMidComboBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryDarkBrush}" />
    </Style>
</ResourceDictionary>
