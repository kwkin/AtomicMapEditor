<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:logic="clr-namespace:Ame.Themes.Material.UILogic">

    <sys:Double x:Key="HoverButtonOpacity">0.50</sys:Double>
    <sys:Double x:Key="SelectedButtonOpacity">1</sys:Double>

    <!-- ############################### Tree View ############################### -->
    <Style x:Key="TreeViewStyle"
           TargetType="{x:Type TreeView}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BaseMidBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Grid x:Name="Root">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Focusable="False"
                                          CanContentScroll="False"
                                          Padding="4">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Expander Toggle Button Style ############################### -->
    <Style x:Key="TreeViewItemExpanderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource MainDarkTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Padding"
                Value="8 4 4 4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root"
                          Background="{DynamicResource TransparentBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22" />
                        </Grid.ColumnDefinitions>

                        <Path x:Name="Path"
                              Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                              Fill="{DynamicResource BaseMidBrush}"
                              Width="12"
                              Height="12"
                              Stretch="Uniform"
                              RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="PathTransform"
                                                    ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="SelectedPath"
                              Data="M 200 150 L 600 150 C 750 150 750 150 600 300 L 500 400 C 400 500 400 500 300 400 L 200 300 C 50 150 50 150 200 150 "
                              Fill="{TemplateBinding Background}"
                              Width="12"
                              Height="12"
                              Stretch="Uniform"
                              RenderTransformOrigin="0.5,0.5"
                              Opacity="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="SelectedPathTransform"
                                                    ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"
                                                      To="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             To="{StaticResource SelectedButtonOpacity}"
                                                             Storyboard.TargetName="SelectedPath"
                                                             Storyboard.TargetProperty="Opacity">
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2"
                                                             To="-1"
                                                             Storyboard.TargetName="PathTransform"
                                                             Storyboard.TargetProperty="ScaleY">
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2"
                                                             To="-1"
                                                             Storyboard.TargetName="SelectedPathTransform"
                                                             Storyboard.TargetProperty="ScaleY">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             To="1"
                                                             Storyboard.TargetName="PathTransform"
                                                             Storyboard.TargetProperty="ScaleY">
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             To="1"
                                                             Storyboard.TargetName="SelectedPathTransform"
                                                             Storyboard.TargetProperty="ScaleY">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPath"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource SelectedButtonOpacity}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PathTransform"
                                                                       Storyboard.TargetProperty="ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="-1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedPathTransform"
                                                                       Storyboard.TargetProperty="ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="-1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################### Tree View Item Style ############################### -->
    <Style x:Key="PrimaryMidTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource MainDarkTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="logic:FillAssist.Feedback"
                Value="{DynamicResource FillFeedbackDarkBrush}" />
        <Setter Property="Padding"
                Value="4 4 4 4" />
        <Setter Property="MinHeight"
                Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22"
                                              Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <ToggleButton x:Name="Expander"
                                      Grid.Column="0"
                                      Style="{StaticResource TreeViewItemExpanderStyle}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                        </ToggleButton>
                        <Border x:Name="Background"
                                Grid.Column="1"
                                Background="{DynamicResource TransparentBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            </ContentPresenter>
                        </Border>
                        <Border x:Name="Ripple"
                                Grid.Column="1"
                                Background="{TemplateBinding logic:FillAssist.Feedback}"
                                BorderThickness="0"
                                CornerRadius="2"
                                Opacity="0">
                        </Border>
                        <Border x:Name="SelectedBackground"
                                Opacity="0"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="2">
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Visibility="Collapsed">
                        </ItemsPresenter>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Normal">
                                    </VisualTransition>
                                    
                                    <VisualTransition GeneratedDuration="0:0:0.05"
                                                      To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.05"
                                                             Storyboard.TargetName="Ripple"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource WeakFillOpacity}">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition GeneratedDuration="0:0:0.05"
                                                      To="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.05"
                                                             Storyboard.TargetName="Ripple"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{DynamicResource MidFillOpacity}">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ripple"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource WeakFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ripple"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource MidFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="HasItemsStates">
                                <VisualState x:Name="HasItems" />
                                <VisualState x:Name="NoItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expander"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource MidFillOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                           Value="false" />
                                <Condition Property="Width"
                                           Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                           Value="false" />
                                <Condition Property="Height"
                                           Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryLightTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource PrimaryMidTreeViewItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryLightBrush}" />
    </Style>

    <Style x:Key="PrimaryDarkTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource PrimaryMidTreeViewItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryDarkBrush}" />
    </Style>

    <Style x:Key="SecondaryLightTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource PrimaryMidTreeViewItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryLightBrush}" />
    </Style>

    <Style x:Key="SecondaryMidTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource PrimaryMidTreeViewItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryMidBrush}" />
    </Style>

    <Style x:Key="SecondaryDarkTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource PrimaryMidTreeViewItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryDarkBrush}" />
    </Style>
</ResourceDictionary>
