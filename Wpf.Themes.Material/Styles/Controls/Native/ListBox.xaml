<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:logic="clr-namespace:Wpf.Themes.Material.UILogic">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Wpf.Themes.Material;component/Styles/Controls/Native/ScrollBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="ListItemSelectedOpacity">0.50</sys:Double>
    
    <!-- ############################### List Box Item Style ############################### -->
    <Style x:Key="PrimaryMidListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryMidBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource MainDarkTextBrush}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource PrimaryFontSize}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource PrimaryFontWeight}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="MinHeight"
                Value="24" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Padding"
                Value="4,0,0,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Background"
                                Background="{DynamicResource TransparentBrush}"
                                BorderBrush="{DynamicResource TransparentBrush}"
                                BorderThickness="0">
                        </Border>
                        <Border x:Name="HoverBackground"
                                Background="{DynamicResource BaseMidBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                        </Border>
                        <Border x:Name="SelectedBackground"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                        </Border>
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                             Storyboard.TargetName="HoverBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.2"
                                                      To="Normal">
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{DynamicResource DisabledOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ListItemSelectedOpacity}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryLightListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource PrimaryMidListBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryLightBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryLightBrush}" />
    </Style>

    <Style x:Key="PrimaryDarkListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource PrimaryMidListBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryDarkBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryDarkBrush}" />
    </Style>

    <Style x:Key="SecondaryLightListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource PrimaryMidListBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryLightBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryLightBrush}" />
    </Style>

    <Style x:Key="SecondaryMidListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource PrimaryMidListBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryMidBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryMidBrush}" />
    </Style>

    <Style x:Key="SecondaryDarkistBoxItemStyle"
           TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource PrimaryMidListBoxItemStyle}">
        <Setter Property="Background"
                Value="{DynamicResource SecondaryDarkBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryDarkBrush}" />
    </Style>
    
    <!-- ############################### List Box Style ############################### -->
    <Style x:Key="PrimaryMidListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BaseMidBrush}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryMidListBoxItemStyle}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid x:Name="Root">

                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ScrollViewerStyle}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryLightListBoxStyle"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource PrimaryMidListBoxStyle}">
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryLightListBoxItemStyle}" />
    </Style>

    <Style x:Key="PrimaryDarkListBoxStyle"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource PrimaryMidListBoxStyle}">
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource PrimaryDarkListBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryLightListBoxStyle"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource PrimaryMidListBoxStyle}">
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryLightListBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryMidListBoxStyle"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource PrimaryMidListBoxStyle}">
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryMidListBoxItemStyle}" />
    </Style>

    <Style x:Key="SecondaryDarkListBoxStyle"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource PrimaryMidListBoxStyle}">
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource SecondaryDarkListBoxItemStyle}" />
    </Style>
</ResourceDictionary>
